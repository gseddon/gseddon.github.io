<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gareth Seddon</title>
    <link>/</link>
    <description>Recent content on Gareth Seddon</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>/work/asterio.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/work/asterio.html</guid>
      <description>At Unihack our team of 3 built a multiplayer, networked version of the classic Asteroids video game, in 24 frantic hours. We separately implemented a game server in node.js, a game client in paper.js, and framerate independing synchronisation and networking code. This was a massive learning curve for the team, none of whom had touched any of these frameworks before, but we came together fantastically as a team and produced one of the most popular programs at the event.</description>
    </item>
    
    <item>
      <title></title>
      <link>/work/bluetooth.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/work/bluetooth.html</guid>
      <description>Several years ago when I bought my first motorbike, I was very keen to get a wireless music solution for commuting to university and my part time job. However, as a student I could not afford to buy a commercial solution, so I decided to build my own. I purchased a second hand Sony bluetooth headset from eBay, and set about cannibalising its insides to fit the helmet. All the controls were removed, and I built boards with glove friendly buttons on them to attach in their place.</description>
    </item>
    
    <item>
      <title></title>
      <link>/work/frogid.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/work/frogid.html</guid>
      <description>The IBM Interactive Experience Sydney team had an engagement with the Australian Museum to build a pair of applications, iOS and Android, to track the frogs of Australia. They had an idea whereby they wanted to crowdsource information about frogs, and do it using apps that were fun, informative, and kept users coming back for more. The core idea was that one was able to use a phone&amp;rsquo;s microphone to record a frog call, and optionally take pictures of the frog.</description>
    </item>
    
    <item>
      <title></title>
      <link>/work/gameboy.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/work/gameboy.html</guid>
      <description>For a university subject, we were tasked with creating a small handheld device, very similar to a classic Nintendo Gameboy. This included both hardware design and writing the software to make it run. We were required to design a 2 sided PCB in Altium Designer, and then send our designs off for PCB manufacture in China. After a several week delay our boards came back and we could start hand assembly of the various components.</description>
    </item>
    
    <item>
      <title></title>
      <link>/work/gmusic.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/work/gmusic.html</guid>
      <description>Created a lightweight desktop interface for google music. Very simple and includes builtin caching. This was an experiment to learn about building native GUIs and understand python threading and queueing better.</description>
    </item>
    
    <item>
      <title></title>
      <link>/work/marscraft.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/work/marscraft.html</guid>
      <description>At the NASA Spacehack 2016 hackathon, our team of four had the opportunity to make use of a HTC Vive for our project. In keeping with the Space theme, we decided to make a Virtual Reality Mars experience, low gravity and everything. As always, we were diving into the unknown with our tools and frameworks, specifically the Unity game engine and C#, along with alpha quality VR integrations into our engine.</description>
    </item>
    
    <item>
      <title></title>
      <link>/work/msfw.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/work/msfw.html</guid>
      <description>IBM Interactive Experience was contracted by City of Melbourne to develop an iOS companion application for Melbourne Spring Fashion week. Our small team of 4 was given 6 weeks to build an app to &amp;lsquo;wow&amp;rsquo; the client. In addition to the key objective of displaying a calendar of events with a simple process for buying tickets, we wanted to display a curated fashion news feed to the user, adjusted individually based on their interests.</description>
    </item>
    
    <item>
      <title></title>
      <link>/work/nand2tetris.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/work/nand2tetris.html</guid>
      <description>I tackled the free online course nand2tetris: building a computer from first principles. In this course you are loosely guided to build an entire computer simulator, from basic logic circuits, up to an assembler, virtual machine, compiler and lexer. The course is actually taught to Harvard computer science students! I implemented all of these in Elixir, as the recursive nature of compiling and lexing lends itself well to this language. It was great to understand what happens behind the scenes when you hit compile on your code, and the constraints and design choices that influence all of the languages we use today.</description>
    </item>
    
    <item>
      <title></title>
      <link>/work/naomi.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/work/naomi.html</guid>
      <description>I volunteered to help an internal team to help interface our IBM Watson Cognitive Computing platform with a NAO humanoid robot. We wrote a node.js server to connect to the Watson Conversation API and provide some structuring, and I wrote python bindings to allow the robot&amp;rsquo;s operating system to interface its speakers and microphones directly to the server, as well as have automated motion in response to classes of words. For example, if it replied to a question with &amp;lsquo;yes&amp;rsquo;, it would nod its head.</description>
    </item>
    
    <item>
      <title></title>
      <link>/work/partylights.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/work/partylights.html</guid>
      <description>Seeking to enhance my birthday party at home, I built a system to make the outdoor lights dance with the beat of the music. I started planning and iterating the design several months before the event. It was initially to use an arduino microprocessor to run the whole system, however the arduino was found to be too performance constrained for truly accurate beat extraction. The system then morphed to a PC doing the extraction and sending beat signals to the arduino, which would use its GPIO pins to run all the lighting patterns from there.</description>
    </item>
    
    <item>
      <title></title>
      <link>/work/proj-1.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/work/proj-1.html</guid>
      <description>TYPO: International Design Talks is an annual event held in Berlin, London, and San Francisco. This promotional project is developed to market the event for the designindustry. The use of patterns, sophisticated color scheme and typography are applied for the print and mobile application.</description>
    </item>
    
    <item>
      <title></title>
      <link>/work/rtlsdr.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/work/rtlsdr.html</guid>
      <description>My Capstone project for the Masters of Electrical Engineering is based around the RTL-SDR. This is a device which has appeared on the market in the last several years, reducing the cost of Software Defined Radio from thousands of dollars to around 14 AUD. SDR is a process by which a broad spectrum of the radio waves flying past us all the time can be sampled and processed in software, lending a lot of flexibility and opening up a range of avenues of exploration.</description>
    </item>
    
  </channel>
</rss>